{"remainingRequest":"C:\\Users\\86191\\Desktop\\text\\Authentication_web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\86191\\Desktop\\text\\Authentication_web\\src\\utils\\request.js","dependencies":[{"path":"C:\\Users\\86191\\Desktop\\text\\Authentication_web\\src\\utils\\request.js","mtime":1656679713528},{"path":"C:\\Users\\86191\\Desktop\\text\\Authentication_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86191\\Desktop\\text\\Authentication_web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc2VhcmNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHJvdXRlciBmcm9tICJAL3JvdXRlciI7CnZhciByZXF1ZXN0ID0gYXhpb3MuY3JlYXRlKHsKICBiYXNlVVJMOiAiL2FwaSIsCiAgdGltZW91dDogNTAwMAp9KTsgLy8g6K+35rGC55m95ZCN5Y2V77yM5aaC5p6c6K+35rGC5Zyo55m95ZCN5Y2V6YeM6Z2i77yM5bCG5LiN5Lya6KKr5oum5oiq5qCh6aqM5p2D6ZmQCgp2YXIgd2hpdGVVcmxzID0gWyIvdXNlci9sb2dpbiIsICcvdXNlci9hZG1pbicsICcvdXNlci9jb3VudCcsICcvdXNlci9yYW5kb20nLCAiL3VzZXIvbG9naW4yIiwgIi91c2VyL2xvZ2luMyIsICIvYXV0aC90b2tlbiIsICIvYXV0aC9pbWcvIiwgIi9hdXRoL2luZm8vIl07CnZhciByZWcxID0gIi9hdXRoL2luZm8vIjsKdmFyIHJlZzIgPSAiL2F1dGgvaW1nLyI7CnZhciByZWczID0gIi91c2VyL2Jhc2UvIjsgLy8gcmVxdWVzdCDmi6bmiKrlmagKLy8g5Y+v5Lul6Ieq6K+35rGC5Y+R6YCB5YmN5a+56K+35rGC5YGa5LiA5Lqb5aSE55CGCi8vIOavlOWmgue7n+S4gOWKoHRva2Vu77yM5a+56K+35rGC5Y+C5pWw57uf5LiA5Yqg5a+GCgpyZXF1ZXN0LmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgY29uZmlnLmhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddID0gJ2FwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtOCc7CiAgdmFyIGZsYWcxID0gY29uZmlnLnVybC5zZWFyY2gocmVnMSk7CiAgdmFyIGZsYWcyID0gY29uZmlnLnVybC5zZWFyY2gocmVnMik7CiAgdmFyIGZsYWczID0gY29uZmlnLnVybC5zZWFyY2gocmVnMyk7CiAgY29uc29sZS5sb2coZmxhZzEsIGZsYWcyLCAic3NzIik7CiAgdmFyIHVzZXJKc29uID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgidXNlciIpOwoKICBpZiAoIXdoaXRlVXJscy5pbmNsdWRlcyhjb25maWcudXJsKSAmJiBmbGFnMSAhPT0gMCAmJiBmbGFnMiAhPT0gMCAmJiBmbGFnMyAhPT0gMCkgewogICAgLy8g5qCh6aqM6K+35rGC55m95ZCN5Y2VCiAgICBpZiAoIXVzZXJKc29uKSB7CiAgICAgIHJvdXRlci5wdXNoKCIvbG9naW4iKTsKICAgIH0gZWxzZSB7CiAgICAgIHZhciB1c2VyID0gSlNPTi5wYXJzZSh1c2VySnNvbik7CiAgICAgIGNvbmZpZy5oZWFkZXJzWyd0b2tlbiddID0gdXNlci50b2tlbjsgLy8g6K6+572u6K+35rGC5aS0CgogICAgICBjb25zb2xlLmxvZyh1c2VyLnRva2VuKTsKICAgIH0KICB9CgogIHJldHVybiBjb25maWc7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOyAvLyByZXNwb25zZSDmi6bmiKrlmagKLy8g5Y+v5Lul5Zyo5o6l5Y+j5ZON5bqU5ZCO57uf5LiA5aSE55CG57uT5p6cCgpyZXF1ZXN0LmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgdmFyIHJlcyA9IHJlc3BvbnNlLmRhdGE7IC8vIOWmguaenOaYr+i/lOWbnueahOaWh+S7tgoKICBpZiAocmVzcG9uc2UuY29uZmlnLnJlc3BvbnNlVHlwZSA9PT0gJ2Jsb2InKSB7CiAgICByZXR1cm4gcmVzOwogIH0gLy8g5YW85a655pyN5Yqh56uv6L+U5Zue55qE5a2X56ym5Liy5pWw5o2uCgoKICBpZiAodHlwZW9mIHJlcyA9PT0gJ3N0cmluZycpIHsKICAgIHJlcyA9IHJlcyA/IEpTT04ucGFyc2UocmVzKSA6IHJlczsKICB9IC8vIOmqjOivgXRva2VuCgoKICBpZiAocmVzLmNvZGUgPT09ICc0MDEnKSB7CiAgICBjb25zb2xlLmVycm9yKCJ0b2tlbui/h+acn++8jOmHjeaWsOeZu+W9lSIpOwogICAgcm91dGVyLnB1c2goIi9sb2dpbiIpOwogIH0KCiAgcmV0dXJuIHJlczsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgY29uc29sZS5sb2coJ2VycicgKyBlcnJvcik7IC8vIGZvciBkZWJ1ZwoKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwp9KTsKZXhwb3J0IGRlZmF1bHQgcmVxdWVzdDs="},{"version":3,"sources":["C:/Users/86191/Desktop/text/Authentication_web/src/utils/request.js"],"names":["axios","router","request","create","baseURL","timeout","whiteUrls","reg1","reg2","reg3","interceptors","use","config","headers","flag1","url","search","flag2","flag3","console","log","userJson","sessionStorage","getItem","includes","push","user","JSON","parse","token","error","Promise","reject","response","res","data","responseType","code"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport router from \"@/router\";\n\nconst request = axios.create({\n    baseURL: \"/api\",\n    timeout: 5000\n})\n\n// 请求白名单，如果请求在白名单里面，将不会被拦截校验权限\nconst whiteUrls = [\"/user/login\", '/user/admin','/user/count','/user/random',\"/user/login2\",\"/user/login3\",\"/auth/token\",\"/auth/img/\",\"/auth/info/\"]\nconst reg1 =\"/auth/info/\";\nconst reg2 =\"/auth/img/\";\nconst reg3 =\"/user/base/\";\n// request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\nrequest.interceptors.request.use(config => {\n    config.headers['Content-Type'] = 'application/json;charset=utf-8';\nvar flag1=config.url.search(reg1)\nvar flag2=config.url.search(reg2)\nvar flag3=config.url.search(reg3)\nconsole.log(flag1,flag2,\"sss\")\n    let userJson = sessionStorage.getItem(\"user\")\n    if (!whiteUrls.includes(config.url)&&(flag1!==0&&flag2!==0&&flag3!==0)) {  // 校验请求白名单\n        if(!userJson) {\n            router.push(\"/login\")\n        } else {\n            let user = JSON.parse(userJson);\n            config.headers['token'] = user.token;  // 设置请求头\n            console.log(user.token)\n        }\n    }\n    return config\n}, error => {\n    return Promise.reject(error)\n});\n\n// response 拦截器\n// 可以在接口响应后统一处理结果\nrequest.interceptors.response.use(\n    response => {\n        let res = response.data;\n        // 如果是返回的文件\n        if (response.config.responseType === 'blob') {\n            return res\n        }\n        // 兼容服务端返回的字符串数据\n        if (typeof res === 'string') {\n            res = res ? JSON.parse(res) : res\n        }\n        // 验证token\n        if (res.code === '401') {\n            console.error(\"token过期，重新登录\")\n            router.push(\"/login\")\n        }\n        return res;\n    },\n    error => {\n        console.log('err' + error) // for debug\n        return Promise.reject(error)\n    }\n)\n\n\nexport default request"]}]}