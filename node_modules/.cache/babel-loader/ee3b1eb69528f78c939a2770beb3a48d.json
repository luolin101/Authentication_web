{"remainingRequest":"C:\\Users\\86191\\Desktop\\text\\Authentication_web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\86191\\Desktop\\text\\Authentication_web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\86191\\Desktop\\text\\Authentication_web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\86191\\Desktop\\text\\Authentication_web\\src\\components\\page\\Upload.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\86191\\Desktop\\text\\Authentication_web\\src\\components\\page\\Upload.vue","mtime":1611590737000},{"path":"C:\\Users\\86191\\Desktop\\text\\Authentication_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86191\\Desktop\\text\\Authentication_web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\86191\\Desktop\\text\\Authentication_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86191\\Desktop\\text\\Authentication_web\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCB7IEFDQ0VQVF9DT05GSUcgfSBmcm9tICcuLi9jb21tb24vY29uZmlnJzsKaW1wb3J0IFNwYXJrTUQ1IGZyb20gJ3NwYXJrLW1kNSc7CmltcG9ydCB7IG1lcmdlRmlsZSB9IGZyb20gIkAvYXBpL21vZHVsZXMvdXBsb2FkRmlsZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgb3B0aW9uczogewogICAgICAgIC8v55uu5qCH5LiK5LygIFVSTO+8jOm7mOiupFBPU1QKICAgICAgICB0YXJnZXQ6IHByb2Nlc3MuZW52LlZVRV9BUFBfQkFTRV9BUEkgKyAiL3VwbG9hZGVyL2NodW5rIiwKICAgICAgICAvL+WIhuWdl+Wkp+WwjyjljZXkvY3vvJrlrZfoioIpCiAgICAgICAgY2h1bmtTaXplOiAnMjA0ODAwMCcsCiAgICAgICAgLy/kuIrkvKDmlofku7bml7bmlofku7blhoXlrrnnmoTlj4LmlbDlkI3vvIzlr7nlupRjaHVua+mHjOeahE11bHRpcGFydOWvueixoeWQje+8jOm7mOiupOWvueixoeWQjeS4umZpbGUKICAgICAgICBmaWxlUGFyYW1ldGVyTmFtZTogJ3VwZmlsZScsCiAgICAgICAgLy/lpLHotKXlkI7mnIDlpJroh6rliqjph43or5XkuIrkvKDmrKHmlbAKICAgICAgICBtYXhDaHVua1JldHJpZXM6IDMsCiAgICAgICAgLy/mmK/lkKblvIDlkK/mnI3liqHlmajliIbniYfmoKHpqozvvIzlr7nlupRHRVTnsbvlnovlkIzlkI3nmoR0YXJnZXQgVVJMCiAgICAgICAgdGVzdENodW5rczogdHJ1ZSwKCiAgICAgICAgLyogCiAgICAgICAg5pyN5Yqh5Zmo5YiG54mH5qCh6aqM5Ye95pWw77yM5Yik5pat56eS5Lyg5Y+K5pat54K557ut5LygLOS8oOWFpeeahOWPguaVsOaYr1VwbG9hZGVyLkNodW5r5a6e5L6L5Lul5Y+K6K+35rGC5ZON5bqU5L+h5oGvCiAgICAgICAgcmVwb25zZeeggeaYr3N1Y2Nlc3NTdGF0dXNlc+eggeaXtu+8jOaJjeS8mui/m+WFpeivpeaWueazlQogICAgICAgIHJlcG9uc2XnoIHlpoLmnpzov5Tlm57nmoTmmK9wZXJtYW5lbnRFcnJvcnMg5Lit55qE54q25oCB56CB77yM5LiN5Lya6L+b5YWl6K+l5pa55rOV77yM55u05o6l6L+b5YWlb25GaWxlRXJyb3Llh73mlbAg77yM5bm25pi+56S65LiK5Lyg5aSx6LSlCiAgICAgICAgcmVwb25zZeeggeaYr+WFtuS7lueKtuaAgeegge+8jOS4jeS8mui/m+WFpeivpeaWueazle+8jOato+W4uOi1sOagh+WHhuS4iuS8oAogICAgICAgIGNoZWNrQ2h1bmtVcGxvYWRlZEJ5UmVzcG9uc2Xlh73mlbDnm7TmjqVyZXR1cm4gdHJ1ZeeahOivne+8jOS4jeWGjeiwg+eUqOS4iuS8oOaOpeWPowogICAgICAgICovCiAgICAgICAgY2hlY2tDaHVua1VwbG9hZGVkQnlSZXNwb25zZTogZnVuY3Rpb24gY2hlY2tDaHVua1VwbG9hZGVkQnlSZXNwb25zZShjaHVuaywgcmVzcG9uc2VfbXNnKSB7CiAgICAgICAgICB2YXIgb2JqTWVzc2FnZSA9IEpTT04ucGFyc2UocmVzcG9uc2VfbXNnKTsKCiAgICAgICAgICBpZiAob2JqTWVzc2FnZS5za2lwVXBsb2FkKSB7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiAob2JqTWVzc2FnZS51cGxvYWRlZENodW5rcyB8fCBbXSkuaW5kZXhPZihjaHVuay5vZmZzZXQgKyAxKSA+PSAwOwogICAgICAgIH0KICAgICAgfSwKICAgICAgYXR0cnM6IHsKICAgICAgICBhY2NlcHQ6IEFDQ0VQVF9DT05GSUcuZ2V0QWxsKCkKICAgICAgfSwKICAgICAgZmlsZVN0YXR1c1RleHQ6IHsKICAgICAgICBzdWNjZXNzOiAn5LiK5Lyg5oiQ5YqfJywKICAgICAgICBlcnJvcjogJ+S4iuS8oOWksei0pScsCiAgICAgICAgdXBsb2FkaW5nOiAn5LiK5Lyg5LitJywKICAgICAgICBwYXVzZWQ6ICfmmoLlgZwnLAogICAgICAgIHdhaXRpbmc6ICfnrYnlvoXkuIrkvKAnCiAgICAgIH0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBvbkZpbGVBZGRlZDogZnVuY3Rpb24gb25GaWxlQWRkZWQoZmlsZSkgewogICAgICB0aGlzLmNvbXB1dGVNRDUoZmlsZSk7CiAgICB9LAoKICAgIC8qCiAgICDnrKzkuIDkuKrlj4LmlbAgcm9vdEZpbGUg5bCx5piv5oiQ5Yqf5LiK5Lyg55qE5paH5Lu25omA5bGe55qE5qC5IFVwbG9hZGVyLkZpbGUg5a+56LGh77yM5a6D5bqU6K+l5YyF5ZCr5oiW6ICF562J5LqO5oiQ5Yqf5LiK5Lyg5paH5Lu277ybCiAgICDnrKzkuozkuKrlj4LmlbAgZmlsZSDlsLHmmK/lvZPliY3miJDlip/nmoQgVXBsb2FkZXIuRmlsZSDlr7nosaHmnKzouqvvvJsKICAgIOesrOS4ieS4quWPguaVsOWwseaYryBtZXNzYWdlIOWwseaYr+acjeWKoeerr+WTjeW6lOWGheWuue+8jOawuOi/nOmDveaYr+Wtl+espuS4su+8mwogICAg56ys5Zub5Liq5Y+C5pWwIGNodW5rIOWwseaYryBVcGxvYWRlci5DaHVuayDlrp7kvovvvIzlroPlsLHmmK/or6Xmlofku7bnmoTmnIDlkI7kuIDkuKrlnZflrp7kvovvvIzlpoLmnpzkvaDmg7PlvpfliLDor7fmsYLlk43lupTnoIHnmoTor53vvIxjaHVuay54aHIuc3RhdHVz5bCx5pivCiAgICAqLwogICAgb25GaWxlU3VjY2VzczogZnVuY3Rpb24gb25GaWxlU3VjY2Vzcyhyb290RmlsZSwgZmlsZSwgcmVzcG9uc2UsIGNodW5rKSB7CiAgICAgIC8vcmVmUHJvamVjdElk5Li66aKE55WZ5a2X5q6177yM5Y+v5YWz6IGU6ZmE5Lu25omA5bGe55uu5qCH77yM5L6L5aaC5omA5bGe5qGj5qGI77yM5omA5bGe5bel56iL562JCiAgICAgIGZpbGUucmVmUHJvamVjdElkID0gIjEyMzQ1Njc4OSI7CiAgICAgIG1lcmdlRmlsZShmaWxlKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZURhdGEpIHsKICAgICAgICBpZiAocmVzcG9uc2VEYXRhLmRhdGEuY29kZSA9PT0gNDE1KSB7CiAgICAgICAgICBjb25zb2xlLmxvZygi5ZCI5bm25pON5L2c5pyq5oiQ5Yqf77yM57uT5p6c56CB77yaIiArIHJlc3BvbnNlRGF0YS5kYXRhLmNvZGUpOwogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coIuWQiOW5tuWQjuaNleiOt+eahOacquefpeW8guW4uO+8miIgKyBlcnJvcik7CiAgICAgIH0pOwogICAgfSwKICAgIG9uRmlsZUVycm9yOiBmdW5jdGlvbiBvbkZpbGVFcnJvcihyb290RmlsZSwgZmlsZSwgcmVzcG9uc2UsIGNodW5rKSB7CiAgICAgIGNvbnNvbGUubG9nKCfkuIrkvKDlrozmiJDlkI7lvILluLjkv6Hmga/vvJonICsgcmVzcG9uc2UpOwogICAgfSwKCiAgICAvKioKICAgICAqIOiuoeeul21kNe+8jOWunueOsOaWreeCuee7reS8oOWPiuenkuS8oAogICAgICogQHBhcmFtIGZpbGUKICAgICAqLwogICAgY29tcHV0ZU1ENTogZnVuY3Rpb24gY29tcHV0ZU1ENShmaWxlKSB7CiAgICAgIGZpbGUucGF1c2UoKTsgLy/ljZXkuKrmlofku7bnmoTlpKflsI/pmZDliLYyRwoKICAgICAgdmFyIGZpbGVTaXplTGltaXQgPSAyICogMTAyNCAqIDEwMjQgKiAxMDI0OwogICAgICBjb25zb2xlLmxvZygi5paH5Lu25aSn5bCP77yaIiArIGZpbGUuc2l6ZSk7CiAgICAgIGNvbnNvbGUubG9nKCLpmZDliLblpKflsI/vvJoiICsgZmlsZVNpemVMaW1pdCk7CgogICAgICBpZiAoZmlsZS5zaXplID4gZmlsZVNpemVMaW1pdCkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgc2hvd0Nsb3NlOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+aWh+S7tuWkp+Wwj+S4jeiDvei2hei/hzJHJwogICAgICAgIH0pOwogICAgICAgIGZpbGUuY2FuY2VsKCk7CiAgICAgIH0KCiAgICAgIHZhciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgdmFyIHRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsKICAgICAgdmFyIGJsb2JTbGljZSA9IEZpbGUucHJvdG90eXBlLnNsaWNlIHx8IEZpbGUucHJvdG90eXBlLm1velNsaWNlIHx8IEZpbGUucHJvdG90eXBlLndlYmtpdFNsaWNlOwogICAgICB2YXIgY3VycmVudENodW5rID0gMDsKICAgICAgdmFyIGNodW5rU2l6ZSA9IDEwICogMTAyNCAqIDEwMDA7CiAgICAgIHZhciBjaHVua3MgPSBNYXRoLmNlaWwoZmlsZS5zaXplIC8gY2h1bmtTaXplKTsKICAgICAgdmFyIHNwYXJrID0gbmV3IFNwYXJrTUQ1LkFycmF5QnVmZmVyKCk7IC8v55Sx5LqO6K6h566X5pW05Liq5paH5Lu255qETWQ15aSq5oWi77yM5Zug5q2k6YeH55So5Y+q6K6h566X56ysMeWdl+aWh+S7tueahG1kNeeahOaWueW8jwoKICAgICAgdmFyIGNodW5rTnVtYmVyTUQ1ID0gMTsKICAgICAgbG9hZE5leHQoKTsKCiAgICAgIGZpbGVSZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKGUpIHsKICAgICAgICBzcGFyay5hcHBlbmQoZS50YXJnZXQucmVzdWx0KTsKCiAgICAgICAgaWYgKGN1cnJlbnRDaHVuayA8IGNodW5rTnVtYmVyTUQ1KSB7CiAgICAgICAgICBsb2FkTmV4dCgpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB2YXIgbWQ1ID0gc3BhcmsuZW5kKCk7CiAgICAgICAgICBmaWxlLnVuaXF1ZUlkZW50aWZpZXIgPSBtZDU7CiAgICAgICAgICBmaWxlLnJlc3VtZSgpOwogICAgICAgICAgY29uc29sZS5sb2coIk1ENVx1OEJBMVx1N0I5N1x1NUI4Q1x1NkJENVx1RkYxQSIuY29uY2F0KGZpbGUubmFtZSwgIiBcbk1ENVx1RkYxQSIpLmNvbmNhdChtZDUsICIgXG5cdTUyMDZcdTcyNDdcdUZGMUEiKS5jb25jYXQoY2h1bmtzLCAiIFx1NTkyN1x1NUMwRjoiKS5jb25jYXQoZmlsZS5zaXplLCAiIFx1NzUyOFx1NjVGNlx1RkYxQSIpLmNvbmNhdChuZXcgRGF0ZSgpLmdldFRpbWUoKSAtIHRpbWUsICIgbXMiKSk7CiAgICAgICAgfQogICAgICB9OwoKICAgICAgZmlsZVJlYWRlci5vbmVycm9yID0gZnVuY3Rpb24gKCkgewogICAgICAgIHRoaXMuZXJyb3IoIlx1NjU4N1x1NEVGNiIuY29uY2F0KGZpbGUubmFtZSwgIlx1OEJGQlx1NTNENlx1NTFGQVx1OTUxOVx1RkYwQ1x1OEJGN1x1NjhDMFx1NjdFNVx1OEJFNVx1NjU4N1x1NEVGNiIpKTsKICAgICAgICBmaWxlLmNhbmNlbCgpOwogICAgICB9OwoKICAgICAgZnVuY3Rpb24gbG9hZE5leHQoKSB7CiAgICAgICAgdmFyIHN0YXJ0ID0gY3VycmVudENodW5rICogY2h1bmtTaXplOwogICAgICAgIHZhciBlbmQgPSBzdGFydCArIGNodW5rU2l6ZSA+PSBmaWxlLnNpemUgPyBmaWxlLnNpemUgOiBzdGFydCArIGNodW5rU2l6ZTsKICAgICAgICBmaWxlUmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGJsb2JTbGljZS5jYWxsKGZpbGUuZmlsZSwgc3RhcnQsIGVuZCkpOwogICAgICAgIGN1cnJlbnRDaHVuaysrOwogICAgICAgIGNvbnNvbGUubG9nKCLorqHnrpfnrKwiICsgY3VycmVudENodW5rICsgIuWdlyIpOwogICAgICB9CiAgICB9LAogICAgY2xvc2U6IGZ1bmN0aW9uIGNsb3NlKCkgewogICAgICB0aGlzLnVwbG9hZGVyLmNhbmNlbCgpOwogICAgfSwKICAgIGVycm9yOiBmdW5jdGlvbiBlcnJvcihtc2cpIHsKICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICB0aXRsZTogJ+mUmeivrycsCiAgICAgICAgbWVzc2FnZTogbXNnLAogICAgICAgIHR5cGU6ICdlcnJvcicsCiAgICAgICAgZHVyYXRpb246IDIwMDAKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["C:\\Users\\86191\\Desktop\\text\\Authentication_web\\src\\components\\page\\Upload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <!-- 上传器 -->\n    <uploader\n        ref=\"uploader\"\n        :options=\"options\"\n        :autoStart=false\n        :file-status-text=\"fileStatusText\"\n        @file-added=\"onFileAdded\"\n        @file-success=\"onFileSuccess\"\n        @file-progress=\"onFileProgress\"\n        @file-error=\"onFileError\"\n        class=\"uploader-ui\"> \n        <uploader-unsupport></uploader-unsupport>\n        <uploader-drop>\n            <div>\n                <uploader-btn id=\"global-uploader-btn\" :attrs=\"attrs\" ref=\"uploadBtn\">选择文件<i class=\"el-icon-upload el-icon--right\"></i></uploader-btn>\n            </div>\n        </uploader-drop>\n        <uploader-list></uploader-list>\n    </uploader>\n</template>\n\n<script>\n    import {ACCEPT_CONFIG} from '../common/config';\n    import SparkMD5 from 'spark-md5';\n    import {mergeFile} from \"@/api/modules/uploadFile\";\n\n    export default {\n        data () {\n            return {\n                options: {\n                    //目标上传 URL，默认POST\n                    target: process.env.VUE_APP_BASE_API+\"/uploader/chunk\",\n                    //分块大小(单位：字节)\n                    chunkSize: '2048000',\n                    //上传文件时文件内容的参数名，对应chunk里的Multipart对象名，默认对象名为file\n                    fileParameterName: 'upfile',\n                    //失败后最多自动重试上传次数\n                    maxChunkRetries: 3,\n                    //是否开启服务器分片校验，对应GET类型同名的target URL\n                    testChunks: true,   \n                    /* \n                    服务器分片校验函数，判断秒传及断点续传,传入的参数是Uploader.Chunk实例以及请求响应信息\n                    reponse码是successStatuses码时，才会进入该方法\n                    reponse码如果返回的是permanentErrors 中的状态码，不会进入该方法，直接进入onFileError函数 ，并显示上传失败\n                    reponse码是其他状态码，不会进入该方法，正常走标准上传\n                    checkChunkUploadedByResponse函数直接return true的话，不再调用上传接口\n                    */\n                    checkChunkUploadedByResponse: function (chunk, response_msg) {\n                        let objMessage = JSON.parse(response_msg);\n                        if (objMessage.skipUpload) {\n                            return true;\n                        }\n                        return (objMessage.uploadedChunks || []).indexOf(chunk.offset + 1) >= 0;\n                    }      \n                },\n                attrs: {\n                    accept: ACCEPT_CONFIG.getAll()\n                },\n                fileStatusText: {\n                        success: '上传成功',\n                        error: '上传失败',\n                        uploading: '上传中',\n                        paused: '暂停',\n                        waiting: '等待上传'\n                },\n            }\n        },\n        methods: {\n            onFileAdded(file) {\n                this.computeMD5(file);\n            },\n            /*\n            第一个参数 rootFile 就是成功上传的文件所属的根 Uploader.File 对象，它应该包含或者等于成功上传文件；\n            第二个参数 file 就是当前成功的 Uploader.File 对象本身；\n            第三个参数就是 message 就是服务端响应内容，永远都是字符串；\n            第四个参数 chunk 就是 Uploader.Chunk 实例，它就是该文件的最后一个块实例，如果你想得到请求响应码的话，chunk.xhr.status就是\n            */\n            onFileSuccess(rootFile, file, response, chunk) {\n                //refProjectId为预留字段，可关联附件所属目标，例如所属档案，所属工程等\n                file.refProjectId = \"123456789\";\n                mergeFile(file).then( responseData=> {\n                    if(responseData.data.code === 415){\n                        console.log(\"合并操作未成功，结果码：\"+responseData.data.code);\n                    }\n                }).catch(function (error){\n                    console.log(\"合并后捕获的未知异常：\"+error);\n                });\n            },\n            onFileError(rootFile, file, response, chunk) {\n                console.log('上传完成后异常信息：'+response);\n            },\n\n            /**\n             * 计算md5，实现断点续传及秒传\n             * @param file\n             */\n            computeMD5(file) {\n                file.pause();\n\n                //单个文件的大小限制2G\n                let fileSizeLimit = 2 * 1024 * 1024 * 1024;\n                console.log(\"文件大小：\"+file.size);\n                console.log(\"限制大小：\"+fileSizeLimit);\n                if(file.size > fileSizeLimit){\n                    this.$message({\n                        showClose: true,\n                        message: '文件大小不能超过2G'\n                    });\n                    file.cancel();\n                }\n\n                let fileReader = new FileReader();\n                let time = new Date().getTime();\n                let blobSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice;\n                let currentChunk = 0;\n                const chunkSize = 10 * 1024 * 1000;\n                let chunks = Math.ceil(file.size / chunkSize);\n                let spark = new SparkMD5.ArrayBuffer();\n                //由于计算整个文件的Md5太慢，因此采用只计算第1块文件的md5的方式\n                let chunkNumberMD5 = 1;\n\n                loadNext();\n\n                fileReader.onload = (e => {\n                    spark.append(e.target.result);\n\n                    if (currentChunk < chunkNumberMD5) {\n                        loadNext();\n                    } else {\n                        let md5 = spark.end();\n                        file.uniqueIdentifier = md5;\n                        file.resume();\n                        console.log(`MD5计算完毕：${file.name} \\nMD5：${md5} \\n分片：${chunks} 大小:${file.size} 用时：${new Date().getTime() - time} ms`);\n                    }\n                });\n\n                fileReader.onerror = function () {\n                    this.error(`文件${file.name}读取出错，请检查该文件`)\n                    file.cancel();\n                };\n\n                function loadNext() {\n                    let start = currentChunk * chunkSize;\n                    let end = ((start + chunkSize) >= file.size) ? file.size : start + chunkSize;\n\n                    fileReader.readAsArrayBuffer(blobSlice.call(file.file, start, end));\n                    currentChunk++;\n                    console.log(\"计算第\"+currentChunk+\"块\");\n                }\n            },\n            close() {\n                this.uploader.cancel();\n            },\n            error(msg) {\n                this.$notify({\n                    title: '错误',\n                    message: msg,\n                    type: 'error',\n                    duration: 2000\n                })\n            }\n        }\n    }\n</script>\n\n<style>\n  .uploader-ui {\n    padding: 15px;\n    margin: 40px auto 0;\n    font-size: 12px;\n    font-family: Microsoft YaHei;\n    box-shadow: 0 0 10px rgba(0, 0, 0, .4);\n  }\n  .uploader-ui .uploader-btn {\n    margin-right: 4px;\n    font-size: 12px;\n    border-radius: 3px;\n    color: #FFF;\n    background-color: #409EFF;\n    border-color: #409EFF;\n    display: inline-block;\n    line-height: 1;\n    white-space: nowrap;\n  }\n  .uploader-ui .uploader-list {\n    max-height: 440px;\n    overflow: auto;\n    overflow-x: hidden;\n    overflow-y: auto;\n  }\n</style>"],"sourceRoot":""}]}