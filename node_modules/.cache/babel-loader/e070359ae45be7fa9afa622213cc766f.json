{"remainingRequest":"C:\\Users\\86191\\Desktop\\text\\Authentication_web\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\86191\\Desktop\\text\\Authentication_web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\86191\\Desktop\\text\\Authentication_web\\src\\utils\\request.js","dependencies":[{"path":"C:\\Users\\86191\\Desktop\\text\\Authentication_web\\src\\utils\\request.js","mtime":1656384921815},{"path":"C:\\Users\\86191\\Desktop\\text\\Authentication_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86191\\Desktop\\text\\Authentication_web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86191\\Desktop\\text\\Authentication_web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc2VhcmNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHJvdXRlciBmcm9tICJAL3JvdXRlciI7CnZhciByZXF1ZXN0ID0gYXhpb3MuY3JlYXRlKHsKICBiYXNlVVJMOiAiL2FwaSIsCiAgdGltZW91dDogNTAwMAp9KTsgLy8g6K+35rGC55m95ZCN5Y2V77yM5aaC5p6c6K+35rGC5Zyo55m95ZCN5Y2V6YeM6Z2i77yM5bCG5LiN5Lya6KKr5oum5oiq5qCh6aqM5p2D6ZmQCgp2YXIgd2hpdGVVcmxzID0gWyIvdXNlci9sb2dpbiIsICcvdXNlci9hZG1pbicsICcvdXNlci9jb3VudCcsICcvdXNlci9yYW5kb20nLCAiL3VzZXIvbG9naW4yIiwgIi91c2VyL2xvZ2luMyIsICIvYXV0aC90b2tlbiIsICIvYXV0aC9pbWcvIiwgIi9hdXRoL2luZm8vIl07CnZhciByZWcxID0gIi9hdXRoL2luZm8vIjsKdmFyIHJlZzIgPSAiL2F1dGgvaW1nLyI7IC8vIHJlcXVlc3Qg5oum5oiq5ZmoCi8vIOWPr+S7peiHquivt+axguWPkemAgeWJjeWvueivt+axguWBmuS4gOS6m+WkhOeQhgovLyDmr5TlpoLnu5/kuIDliqB0b2tlbu+8jOWvueivt+axguWPguaVsOe7n+S4gOWKoOWvhgoKcmVxdWVzdC5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIGNvbmZpZy5oZWFkZXJzWydDb250ZW50LVR5cGUnXSA9ICdhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgnOwogIHZhciBmbGFnMSA9IGNvbmZpZy51cmwuc2VhcmNoKHJlZzEpOwogIHZhciBmbGFnMiA9IGNvbmZpZy51cmwuc2VhcmNoKHJlZzIpOwogIGNvbnNvbGUubG9nKGZsYWcxLCBmbGFnMiwgInNzcyIpOyAvL2NvbnNvbGUubG9nKGNvbmZpZy51cmwpCiAgLy8g5Y+W5Ye6c2Vzc2lvblN0b3JhZ2Xph4zpnaLnvJPlrZjnmoTnlKjmiLfkv6Hmga8KCiAgdmFyIHVzZXJKc29uID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgidXNlciIpOwoKICBpZiAoIXdoaXRlVXJscy5pbmNsdWRlcyhjb25maWcudXJsKSAmJiBmbGFnMSAhPT0gMCAmJiBmbGFnMiAhPT0gMCkgewogICAgLy8g5qCh6aqM6K+35rGC55m95ZCN5Y2VCiAgICBpZiAoIXVzZXJKc29uKSB7CiAgICAgIHJvdXRlci5wdXNoKCIvbG9naW4iKTsKICAgIH0gZWxzZSB7CiAgICAgIHZhciB1c2VyID0gSlNPTi5wYXJzZSh1c2VySnNvbik7CiAgICAgIGNvbmZpZy5oZWFkZXJzWyd0b2tlbiddID0gdXNlci50b2tlbjsgLy8g6K6+572u6K+35rGC5aS0CiAgICB9CiAgfQoKICByZXR1cm4gY29uZmlnOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwp9KTsgLy8gcmVzcG9uc2Ug5oum5oiq5ZmoCi8vIOWPr+S7peWcqOaOpeWPo+WTjeW6lOWQjue7n+S4gOWkhOeQhue7k+aenAoKcmVxdWVzdC5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXNwb25zZSkgewogIHZhciByZXMgPSByZXNwb25zZS5kYXRhOyAvLyDlpoLmnpzmmK/ov5Tlm57nmoTmlofku7YKCiAgaWYgKHJlc3BvbnNlLmNvbmZpZy5yZXNwb25zZVR5cGUgPT09ICdibG9iJykgewogICAgcmV0dXJuIHJlczsKICB9IC8vIOWFvOWuueacjeWKoeerr+i/lOWbnueahOWtl+espuS4suaVsOaNrgoKCiAgaWYgKHR5cGVvZiByZXMgPT09ICdzdHJpbmcnKSB7CiAgICByZXMgPSByZXMgPyBKU09OLnBhcnNlKHJlcykgOiByZXM7CiAgfSAvLyDpqozor4F0b2tlbgoKCiAgaWYgKHJlcy5jb2RlID09PSAnNDAxJykgewogICAgY29uc29sZS5lcnJvcigidG9rZW7ov4fmnJ/vvIzph43mlrDnmbvlvZUiKTsKICAgIHJvdXRlci5wdXNoKCIvbG9naW4iKTsKICB9CgogIHJldHVybiByZXM7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIGNvbnNvbGUubG9nKCdlcnInICsgZXJyb3IpOyAvLyBmb3IgZGVidWcKCiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7CmV4cG9ydCBkZWZhdWx0IHJlcXVlc3Q7"},{"version":3,"sources":["C:/Users/86191/Desktop/text/Authentication_web/src/utils/request.js"],"names":["axios","router","request","create","baseURL","timeout","whiteUrls","reg1","reg2","interceptors","use","config","headers","flag1","url","search","flag2","console","log","userJson","sessionStorage","getItem","includes","push","user","JSON","parse","token","error","Promise","reject","response","res","data","responseType","code"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,IAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAE,MADgB;AAEzBC,EAAAA,OAAO,EAAE;AAFgB,CAAb,CAAhB,C,CAKA;;AACA,IAAMC,SAAS,GAAG,CAAC,aAAD,EAAgB,aAAhB,EAA8B,aAA9B,EAA4C,cAA5C,EAA2D,cAA3D,EAA0E,cAA1E,EAAyF,aAAzF,EAAuG,YAAvG,EAAoH,aAApH,CAAlB;AACA,IAAMC,IAAI,GAAE,aAAZ;AACA,IAAMC,IAAI,GAAE,YAAZ,C,CACA;AACA;AACA;;AACAN,OAAO,CAACO,YAAR,CAAqBP,OAArB,CAA6BQ,GAA7B,CAAiC,UAAAC,MAAM,EAAI;AACvCA,EAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiC,gCAAjC;AACJ,MAAIC,KAAK,GAACF,MAAM,CAACG,GAAP,CAAWC,MAAX,CAAkBR,IAAlB,CAAV;AACA,MAAIS,KAAK,GAACL,MAAM,CAACG,GAAP,CAAWC,MAAX,CAAkBP,IAAlB,CAAV;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAkBG,KAAlB,EAAwB,KAAxB,EAJ2C,CAK3C;AACI;;AACA,MAAIG,QAAQ,GAAGC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAf;;AACA,MAAI,CAACf,SAAS,CAACgB,QAAV,CAAmBX,MAAM,CAACG,GAA1B,CAAD,IAAkCD,KAAK,KAAG,CAAR,IAAWG,KAAK,KAAG,CAAzD,EAA6D;AAAG;AAC5D,QAAG,CAACG,QAAJ,EAAc;AACVlB,MAAAA,MAAM,CAACsB,IAAP,CAAY,QAAZ;AACH,KAFD,MAEO;AACH,UAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWP,QAAX,CAAX;AACAR,MAAAA,MAAM,CAACC,OAAP,CAAe,OAAf,IAA0BY,IAAI,CAACG,KAA/B,CAFG,CAEoC;AAC1C;AACJ;;AACD,SAAOhB,MAAP;AACH,CAjBD,EAiBG,UAAAiB,KAAK,EAAI;AACR,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAnBD,E,CAqBA;AACA;;AACA1B,OAAO,CAACO,YAAR,CAAqBsB,QAArB,CAA8BrB,GAA9B,CACI,UAAAqB,QAAQ,EAAI;AACR,MAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAnB,CADQ,CAER;;AACA,MAAIF,QAAQ,CAACpB,MAAT,CAAgBuB,YAAhB,KAAiC,MAArC,EAA6C;AACzC,WAAOF,GAAP;AACH,GALO,CAMR;;;AACA,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzBA,IAAAA,GAAG,GAAGA,GAAG,GAAGP,IAAI,CAACC,KAAL,CAAWM,GAAX,CAAH,GAAqBA,GAA9B;AACH,GATO,CAUR;;;AACA,MAAIA,GAAG,CAACG,IAAJ,KAAa,KAAjB,EAAwB;AACpBlB,IAAAA,OAAO,CAACW,KAAR,CAAc,cAAd;AACA3B,IAAAA,MAAM,CAACsB,IAAP,CAAY,QAAZ;AACH;;AACD,SAAOS,GAAP;AACH,CAjBL,EAkBI,UAAAJ,KAAK,EAAI;AACLX,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAQU,KAApB,EADK,CACsB;;AAC3B,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CArBL;AAyBA,eAAe1B,OAAf","sourcesContent":["import axios from 'axios'\nimport router from \"@/router\";\n\nconst request = axios.create({\n    baseURL: \"/api\",\n    timeout: 5000\n})\n\n// 请求白名单，如果请求在白名单里面，将不会被拦截校验权限\nconst whiteUrls = [\"/user/login\", '/user/admin','/user/count','/user/random',\"/user/login2\",\"/user/login3\",\"/auth/token\",\"/auth/img/\",\"/auth/info/\"]\nconst reg1 =\"/auth/info/\";\nconst reg2 =\"/auth/img/\";\n// request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\nrequest.interceptors.request.use(config => {\n    config.headers['Content-Type'] = 'application/json;charset=utf-8';\nvar flag1=config.url.search(reg1)\nvar flag2=config.url.search(reg2)\nconsole.log(flag1,flag2,\"sss\")\n//console.log(config.url)\n    // 取出sessionStorage里面缓存的用户信息\n    let userJson = sessionStorage.getItem(\"user\")\n    if (!whiteUrls.includes(config.url)&&(flag1!==0&&flag2!==0)) {  // 校验请求白名单\n        if(!userJson) {\n            router.push(\"/login\")\n        } else {\n            let user = JSON.parse(userJson);\n            config.headers['token'] = user.token;  // 设置请求头\n        }\n    }\n    return config\n}, error => {\n    return Promise.reject(error)\n});\n\n// response 拦截器\n// 可以在接口响应后统一处理结果\nrequest.interceptors.response.use(\n    response => {\n        let res = response.data;\n        // 如果是返回的文件\n        if (response.config.responseType === 'blob') {\n            return res\n        }\n        // 兼容服务端返回的字符串数据\n        if (typeof res === 'string') {\n            res = res ? JSON.parse(res) : res\n        }\n        // 验证token\n        if (res.code === '401') {\n            console.error(\"token过期，重新登录\")\n            router.push(\"/login\")\n        }\n        return res;\n    },\n    error => {\n        console.log('err' + error) // for debug\n        return Promise.reject(error)\n    }\n)\n\n\nexport default request\n\n"]}]}